name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20' # Node.js versiyonunu ihtiyacınıza göre ayarlayın

      - name: Install dependencies
        run: |
          npm install
        working-directory: ./my-node-app

      - name: Run tests
        run: |
          npm test
        working-directory: ./my-node-app

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Copy files to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 400 ec2_key.pem
          scp -o StrictHostKeyChecking=no -i ec2_key.pem -r ./my-node-app/* $EC2_USER@$EC2_HOST:/home/$EC2_USER/my-node-app/

      - name: SSH and deploy
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST << 'EOF'
          sudo yum update -y
          sudo yum install -y nodejs npm
          sudo npm install -g pm2
          cd /home/$EC2_USER/my-node-app
          npm install || { echo 'npm install failed'; exit 1; }
          pm2 start app.js

          # Configure Nginx
          sudo amazon-linux-extras install nginx1 -y
          sudo service nginx start
          sudo bash -c 'cat > /etc/nginx/conf.d/my-node-app.conf' << EOL
          server {
              listen 80;
              server_name sumeyyedev.site;

              location / {
                  proxy_pass http://localhost:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade \$http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host \$host;
                  proxy_cache_bypass \$http_upgrade;
              }
          }
          EOL
          sudo service nginx restart
          EOF